to rediect to file use >
to redirect to other command use pipe | or 


ls -l > ~/output.txt
> output with overwrite
>> output append to file

output 1,2,3

output 1 is default:
echo "hello!" > output.txt == echo "hello!" 1 > output.txt

output 2 is err:
ech "hello!" > output.txt   - has no output
ech "hello!" 2 > output.txt   - redirect error output to output.txt file


dev/null:

this file is blackwhole . everything that redirected to here is go zeros or erased or ignored and not output. dev/null never been fulled. it has fixed size of volume.


two output:
1>&2   - error and result are outputed. ex.:

echo "hello!" >> output.txt 2>&1
echo "hello!" > /dev/null 2>&1

pipline or | :
one command output will be other one input. ex.:
cat /etc/passwd | wc -l

filter:
head file1   - show 10 top line of file 1
tail file1   - show 10 butom line of file1
tail -32   - show 32 butom line of file1
head -32 file1   - show 32 top line of file 1
tail -f   - tail follow realtime output - in order of tshoot its useful for ex. open 2 sesstion tab , in one tab open service in other open tail -f servicelog .  compare and investigate output

example:
cd /var/log
cat syslog | wc -l
tail syslog

example: 
exactly line 14 file1:
head -14 file1 | tail -1
cat -n syslog | head -14 | tail -1

example: 
we have error in line of 165. what would we do?
cat -n syslog | head -170 | tail -10

more and less:
both of them is used to open textpage . more is deprecated and dont go to top lines but less go any where

sed:
sed is stream editor to replace one word in file:
sed "s/arash/hamed/g" file1.txt  -   substitude find and replace arash with hamed globally i file1.txt. we can user pipeline

nano:
text editor in ubuntu. vi and vim are unix base
in nano ^ == ctrl , M == alt

sed make preview output to inpalce changes and save in file, use -i swich with it. also we can use other character instead of / .Provided that all those character are the same.
sed -i "s/arash/hamed/g" names.txt
sed -i "s+arash+hamed+g" names.txt

we can use variable for string ex.: $myname

example:
change in line 3 to 5 arash to hamed
sed  "3,5s/arash/hamed/g" names.txt
change just in line 1
sed  "1s/arash/hamed/g" names.txt

for just preview in sed and not change anything use -n:
use p for paragraph. when use inter in line it meanse paragraph
sed -n "3p" name.txt   - preview line or paragraph 3
sed -n "2,4p" name.txt   -preview line or paragraph 2 to 4



tr:
to replace one character. its very useful command.

sed replace a word
tr replace a character

tr 't' '*'    - replace t with *



















